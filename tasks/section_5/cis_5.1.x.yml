---

- name: "5.1.1 | Ensure permissions on /etc/ssh/sshd_config are configured"
  block:
  - name: 5.1.1 | Ensure permissions on /etc/ssh/sshd_config are configured | Apply changes to /etc/ssh/sshd_config
    file:
      path: /etc/ssh/sshd_config
      owner: root
      group: root
      mode: '0600'

  - name: 5.1.1 | Ensure permissions on /etc/ssh/sshd_config are configured | Find all .conf files in /etc/ssh/sshd_config.d
    find:
      paths: /etc/ssh/sshd_config.d
      patterns: '*.conf'
    register: conf_files

  - name: 5.1.1 | Ensure permissions on /etc/ssh/sshd_config are configured | Apply permissions to .conf files
    file:
      path: "{{ item.path }}"
      owner: root
      group: root
      mode: '0600'
    loop: "{{ conf_files.files }}"
  tags:
  - level1-server
  - level1-workstation
  - automated
  - patch
  - 5.1.1
  - ssh

- name: "5.1.2 | Ensure permissions on SSH private host key files are configured"
  block:
  - name: "5.1.2 | Ensure permissions on SSH private host key files are configured | Find ssh_host private keys"
    find:
      paths: /etc/ssh
      patterns: 'ssh_host_*_key'
    register: cis_5_1_2_ssh_host_priv_keys

  - name: "5.1.2 | Ensure permissions on SSH private host key files are configured | Set permissions"
    file:
      path: "{{ item.path }}"
      owner: root
      group: root
      mode: '0600'
    with_items:
    - "{{ cis_5_1_2_ssh_host_priv_keys.files }}"
    loop_control:
      label: "{{ item.path }}"
  tags:
  - level1-server
  - level1-workstation
  - automated
  - patch
  - 5.1.2
  - ssh

- name: "5.1.3 | Ensure permissions on SSH public host key files are configured"
  block:
  - name: "5.1.3 | Ensure permissions on SSH public host key files are configured | Find ssh_host public keys"
    find:
      paths: /etc/ssh
      patterns: 'ssh_host_*_key.pub'
    register: cis_5_1_3_ssh_host_pub_keys

  - name: "5.1.3 | Ensure permissions on SSH public host key files are configured | Set permissions"
    file:
      path: "{{ item.path }}"
      owner: root
      group: root
      mode: '0644'
    with_items:
    - "{{ cis_5_1_3_ssh_host_pub_keys.files }}"
    loop_control:
    label: "{{ item.path }}"
  tags:
  - level1-server
  - level1-workstation
  - automated
  - patch
  - 5.1.3
  - ssh

- name: "5.1.4 | Ensure sshd access is configured"
  block:
  - name: "5.1.4 | Ensure sshd access is configured | Add allowed users"
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^AllowUsers|^#AllowUsers'
      line: 'AllowUsers {{ cis_sshd.allow_users }}'
      validate: 'sshd -t -f %s'
    notify: Restart sshd
    when: "cis_sshd['allow_users']| default('') | length > 0 "

  - name: "5.1.4 | Ensure sshd access is configured | Add allowed groups"
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^AllowGroups|^#AllowGroups'
      line: 'AllowGroups {{ cis_sshd.allow_groups }}'
      validate: 'sshd -t -f %s'
    notify: Restart sshd
    when: "cis_sshd['allow_groups']| default('') | length > 0"

  - name: "5.1.4 | Ensure sshd access is configured | Add deny users"
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^DenyUsers|^#DenyUsers'
      line: 'DenyUsers {{ cis_sshd.deny_users }} '
      validate: 'sshd -t -f %s'
    notify: Restart sshd
    when: "cis_sshd['deny_users']| default('') | length > 0"

  - name: "5.1.4 | Ensure sshd access is configured | Add deny groups"
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^DenyGroups|^#DenyGroups'
      line: 'DenyGroups {{ cis_sshd.deny_groups }}'
      validate: 'sshd -t -f %s'
    notify: Restart sshd
    when: "cis_sshd['deny_groups']| default('') | length > 0"
  tags:
  - level1-server
  - level1-workstation
  - automated
  - patch
  - 5.1.4
  - ssh

- name: "5.1.5 | Ensure sshd Banner is configured"
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^Banner|^#Banner'
    line: Banner /etc/issue.net
    insertafter: '^# no default banner path'
    validate: 'sshd -t -f %s'
  notify: Restart sshd
  tags:
  - level1-server
  - level1-workstation
  - automated
  - patch
  - 5.1.5
  - ssh

- name: "5.1.6 | Ensure sshd Ciphers are configured"
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^Ciphers|^#Ciphers'
    line: "Ciphers {{ cis_sshd.ciphers | default(cis_sshd_default_ciphers) | join(',') }}"
    insertafter: '^# Ciphers and keying'
    validate: 'sshd -t -f %s'
  notify: Restart sshd
  tags:
  - level1-server
  - level1-workstation
  - automated
  - patch
  - 5.1.6
  - ssh

- name: "5.1.7 | Ensure SSH Idle Timeout Interval is configured"
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    validate: 'sshd -t -f %s'
  with_items:
  - { regexp: '^ClientAliveInterval|^#ClientAliveInterval', line: 'ClientAliveInterval {{ cis_sshd.client_alive_interval | default(cis_sshd_default_client_alive_interval) }}' }
  - { regexp: '^ClientAliveCountMax|^#ClientAliveCountMax', line: 'ClientAliveCountMax {{ cis_sshd.client_alive_count_max | default(cis_sshd_default_client_alive_count_max) }}' }
  notify: Restart sshd
  tags:
  - level1-server
  - level1-workstation
  - automated
  - patch
  - 5.1.7
  - sshd

- name: "5.1.8 | Ensure sshd DisableForwarding is enabled"
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^DisableForwarding|^#DisableForwarding'
    line: 'DisableForwarding yes'
    validate: 'sshd -t -f %s'
  notify: Restart sshd
  tags:
  - level1-server
  - level1-workstation
  - automated
  - patch
  - 5.1.8
  - sshd

- name: "5.1.9 | Ensure sshd GSSAPIAuthentication is disabled"
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^GSSAPIAuthentication|^#GSSAPIAuthentication'
    line: 'GSSAPIAuthentication no'
    insertafter: '# To disable tunneled clear text passwords'
    validate: 'sshd -t -f %s'
  notify: Restart sshd
  tags:
  - level1-server
  - level1-workstation
  - automated
  - patch
  - 5.1.9
  - ssh

- name: "5.1.10 | Ensure sshd HostbasedAuthentication is disabled"
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^HostbasedAuthentication|^#HostbasedAuthentication'
    line: 'HostbasedAuthentication no'
    validate: 'sshd -t -f %s'
  notify: Restart sshd
  tags:
  - level1-server
  - level1-workstation
  - automated
  - patch
  - 5.1.10
  - ssh

- name: "5.1.11 | Ensure SSH IgnoreRhosts is enabled"
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^IgnoreRhosts|^#IgnoreRhosts'
    line: 'IgnoreRhosts yes'
    validate: 'sshd -t -f %s'
  notify: Restart sshd
  tags:
  - level1-server
  - level1-workstation
  - automated
  - patch
  - 5.1.11
  - ssh

- name: "5.1.12 | Ensure only strong Key Exchange algorithms are used"
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^KexAlgorithms|^#KexAlgorithms'
    line: "KexAlgorithms {{ cis_sshd.kex_algorithms | default(cis_sshd_default_kex_algorithms) | join(',') }}"
    insertafter: '^# Ciphers and keying'
    validate: 'sshd -t -f %s'
  notify: Restart sshd
  tags:
  - level1-server
  - level1-workstation
  - automated
  - patch
  - 5.1.12
  - ssh

- name: "5.1.13 | Ensure sshd LoginGraceTime is configured"
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^LoginGraceTime|^#LoginGraceTime'
    line: 'LoginGraceTime {{ cis_sshd.login_grace_time | default(cis_sshd_default_login_grace_time) }}'
    insertafter: '^# Authentication'
    validate: 'sshd -t -f %s'
  notify: Restart sshd
  tags:
  - level1-server
  - level1-workstation
  - automated
  - patch
  - 5.1.13
  - ssh

- name: "5.1.14 | Ensure SSH LogLevel is appropriate"
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^LogLevel|^#LogLevel'
    line: 'LogLevel {{ cis_sshd.log_level | default(cis_sshd_default_log_level) }}'
    insertafter: '^# Logging'
    validate: 'sshd -t -f %s'
  notify: Restart sshd
  tags:
  - level1-server
  - level1-workstation
  - automated
  - patch
  - 5.1.14
  - ssh

- name: "5.1.15 | Ensure sshd MACs are configured"
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^MACs|^#MACs'
    line: "MACs {{ cis_sshd.macs | default(cis_sshd_default_macs) | join(',') }}"
    insertafter: '^# Ciphers and keying'
    validate: 'sshd -t -f %s'
  notify: Restart sshd
  tags:
  - level1-server
  - level1-workstation
  - automated
  - patch
  - 5.1.15
  - ssh

- name: "5.1.16 | Ensure SSH MaxAuthTries is set to 4 or less"
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^MaxAuthTries|^#MaxAuthTries'
    line: 'MaxAuthTries {{ cis_sshd.max_auth_tries | default(cis_sshd_default_max_auth_tries) }}'
    insertafter: '^# Authentication'
    validate: 'sshd -t -f %s'
  notify: Restart sshd
  tags:
  - level1-server
  - level1-workstation
  - automated
  - patch
  - 5.1.16
  - ssh

- name: "5.1.17 | Ensure sshd MaxSessions is configured"
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^MaxSessions|^#MaxSessions'
    line: 'MaxSessions {{ cis_sshd.max_sessions | default(cis_sshd_default_max_sessions) }}'
    insertafter: '^# Authentication'
    validate: 'sshd -t -f %s'
  notify: Restart sshd
  tags:
  - level1-server
  - level1-workstation
  - automated
  - patch
  - 5.1.17
  - ssh

- name: "5.1.18 | Ensure SSH MaxStartups is configured"
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^MaxStartups|^#MaxStartups'
    line: "MaxStartups {{ cis_sshd_max_startups }}"
    validate: 'sshd -t -f %s'
  notify: Restart sshd
  tags:
  - level1-server
  - level1-workstation
  - automated
  - patch
  - 5.1.18
  - ssh

- name: "5.1.19 | Ensure sshd PermitEmptyPasswords is disabled"
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^PermitEmptyPasswords|^#PermitEmptyPasswords'
    line: 'PermitEmptyPasswords no'
    validate: 'sshd -t -f %s'
  notify: Restart sshd
  tags:
  - level1-server
  - level1-workstation
  - automated
  - patch
  - 5.1.19
  - ssh

- name: "5.1.20 | Ensure sshd PermitRootLogin is disabled"
  block:
  - name: "5.1.20 | Ensure sshd PermitRootLogin is disabled | Set default"
    lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: "^PermitRootLogin .*"
      line: "PermitRootLogin no"
  - name: "5.1.20 | Ensure sshd PermitRootLogin is disabled | Remove root login for all existing IPs"
    replace:
      dest: /etc/ssh/sshd_config
      regexp: "^[Mm]atch [Aa]ddress.*\n[ ]*PermitRootLogin.*(\n[Mm]atch [Aa]ll[ ]*)?\n"
  - name: "5.1.20 | Ensure sshd PermitRootLogin is disabled | Allow ssh root login from '{{ cis_ssh_root_login_ips }}'"
    lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      line: "Match Address {{ cis_ssh_root_login_ips }}\n  PermitRootLogin yes\nMatch All"
    when: (cis_ssh_root_login_ips != "None") and (cis_ssh_root_login_ips|length > 0)
  notify: Restart sshd
  tags:
  - level1-server
  - level1-workstation
  - automated
  - patch
  - 5.1.20
  - ssh

- name: "5.1.21 | Ensure sshd PermitUserEnvironment is disabled"
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^PermitUserEnvironment|^#PermitUserEnvironment'
    line: 'PermitUserEnvironment no'
    validate: 'sshd -t -f %s'
  notify: Restart sshd
  tags:
  - level1-server
  - level1-workstation
  - automated
  - patch
  - 5.1.21
  - ssh

- name: "5.1.22 | Ensure sshd UsePAM is enabled"
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^UsePAM|^#UsePAM'
    line: 'UsePAM yes'
    insertafter: '^# and ChallengeResponseAuthentication'
    validate: 'sshd -t -f %s'
  notify: Restart sshd
  tags:
  - level1-server
  - level1-workstation
  - automated
  - patch
  - 5.1.22
  - ssh
  - pam
